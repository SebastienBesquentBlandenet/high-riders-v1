security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        login:
            pattern: ^/api/v1/login
            stateless: true
            # anonymous: true
            json_login:
                check_path: /api/v1/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            # anonymous: true
            jwt: ~

        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider
            

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        
        # Il faut avoir le role Admin pour afficher Back office
        - { path: ^/backoffice, roles: PUBLIC_ACCESS }

        - { path: ^/api/v1/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY  }
        - { path: ^/api/v1/users, roles: ROLE_ADMIN }
        # - { path: ^/api∕v1∕(spots|events|users)/\d+$, roles: IS_AUTHENTICATED_FULLY }

    role_hierarchy:
        # Un role Admin peut faire, tout ce que fait un roleUser
        ROLE_ADMIN: ROLE_USER

        # Un role SUPER Admin peut faire, tout ce que fait un role Admin
        ROLE_SUPER_ADMIN: ROLE_ADMIN  
